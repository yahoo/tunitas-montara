// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-montara/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/montara/tree/LICENSE
#divert <fpp>
#import autotools.autoconf.Config
#import tunitas.montara // CONFIG
namespace autotools::autoconf {
  //
  // Normally these specializations are synthetic, being derived from config.h
  // Herein, they are hand-coded.
  //
  template<> struct Config<tunitas::montara::CONFIG>;
}
#endiv
#divert <hpp>
#include "config.h" // this is not expected to be published (exported)
#import std.filesystem.path
#import std.uint8_t
template<> struct autotools::autoconf::Config<tunitas::montara::CONFIG> {
  //
  // [[FIXTHIS]] use the automated means to transform the config.h into the C++ class.
  // [[FIXTHIS]] Pick a few that we care about and implement them manually
  inline static auto package_major() -> std::uint8_t { return PACKAGE_MAJOR; }
  inline static auto package_minor() -> std::uint8_t { return PACKAGE_MINOR; }
  inline static auto package_patch() -> std::uint8_t { return PACKAGE_PATCHLEVEL; }
  //
  // like $(sysconfdir), this is $(pkgconfdir) ... not "pkgconfigdir"
  inline static auto pkgconfdir() -> std::filesystem::path { return TUNITAS_MONTARA_PKGCONFDIR; }
};
#endiv
