// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-montara/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/montara/tree/LICENSE
#divert <fpp>
namespace tunitas::montara::storage::configuration::exception {
  //
  // And also a type exception
  // To simplify and make cogent the visitor lambdas on failing branches.
  //
  // Usage:
  //
  //   throw Wrong_Type{};
  //
  class [[nodiscard]] Wrong_Type;
}
#endiv
#divert <hpp>
#import std.invalid_argument
class tunitas::montara::storage::configuration::exception::Wrong_Type : public std::invalid_argument {
  using Ancestor = std::invalid_argument;
public:
  inline Wrong_Type();
};
#endiv
#divert <ipp>
tunitas::montara::storage::configuration::exception::Wrong_Type::Wrong_Type()
  : Ancestor{"wrong type"} { }
#endiv
