// This is -*- c++ -*- in the S.C.O.L.D. stylings that are so popular these days.
#divert <fpp>
namespace tunitas::montara::error {
  enum class Code {
    SUCCESS = 0,
    NO_SUCH_STORAGE_ENGINE,
    NOT_AN_IDENTIFIER, // i.e. the identifier is not a number (an "identifier" is a large integer)
    NO_SUCH_KEY_IN_CONFIGURATION,
    INVALID_BLOB, // typically this is PUT(id, blob) where id != blob["id"]
    NOT_FOUND, // i.e. GET(id) failed to find the id; the type of the identifier is clear from the context
    FOUND //      i.e. POST(blob) for an id that alread exists; should have been PUT
  };
}
#import std.is_error_code_enum
namespace std {
  template<> struct is_error_code_enum<tunitas::montara::error::Code>;
}
#endiv
#divert <hpp>
#import std.true_type
template<> struct std::is_error_code_enum<tunitas::montara::error::Code> : public std::true_type { };
#import std.error_code
namespace tunitas::montara::error {
  inline auto make_error_code(Code) -> std::error_code;
}
#endiv
#divert <ipp>
#import tunitas.montara.error.category
auto tunitas::montara::error::make_error_code(Code code) -> std::error_code {
  return std::error_code{(int) code, category()};
}
#endiv
