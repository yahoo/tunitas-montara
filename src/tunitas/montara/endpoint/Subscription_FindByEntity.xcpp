// This is -*- c++ -*- (as close to C++2a as possible)
#divert <fpp>
namespace tunitas::montara::endpoint {
  //
  // The code behind the /subscription/findByEntity endpoint
  //
  // Example: TBD
  //
  // Usage:
  //
  //   endpoint::Subscription_FindByEntity resource;
  //   ws.register_resource("/subscription/findByEntity", &resource, true);
  //   ws.start(cfg.foreground);
  //   
  class Subscription_FindByEntity;
}
#endiv
#divert <hpp>
class tunitas::montara::endpoint::Subscription_FindByEntity : public httpserver::Resource<Subscription_FindByEntity> {
public:
  Subscription_FindByEntity();
  auto render_GET(Request const &, [[out]] Response **fill) -> void;
private:
  static std::string const DUMMY_DATA;
};
#endiv
#divert <cpp>
#import std.string_literals
#import tunitas.montara.filters
#import tunitas.montara.constants
#import tunitas.montara.resources
namespace tunitas::montara::endpoint {
  using namespace constants;
  using namespace std::literals;
  Subscription_FindByEntity::Subscription_FindByEntity() {
    resources::initialize_only_get(*this);
  }
  auto Subscription_FindByEntity::render_GET(Request const &request, Response **fill) -> void {
    filters::enforce_no_query_parameters(request, *fill);
    if (nullptr == *fill) {
      // [[FIXTHIS]] recover the segments from a database
      auto const &content_body = DUMMY_DATA;
      auto const code = http::R200_OK;
      auto const &content_type = mime::APPLICATION_JSON;
      httpserver::response::Builder bob{content_body, code, content_type};
      *fill = new Response{bob};
    }
  }
}
#endiv
