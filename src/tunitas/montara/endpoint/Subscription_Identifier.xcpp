// This is -*- c++ -*- (as close to C++2a as possible)
#divert <fpp>
namespace tunitas::montara::endpoint {
  //
  // The code behind the /subscription/{subscriptionId} endpoint
  //
  // Example: TBD
  //
  // Usage:
  //
  //   endpoint::Transfer_Identifier resource;
  //   ws.register_resource("/taxonomy/{subscriptionId}", &resource, true);
  //   ws.start(cfg.foreground);
  //   
  class Subscription_Identifier;
}
#endiv
#divert <hpp>
#import std.string
#import tunitas.montara.endpoint.aspect.Operations
#import tunitas.montara.endpoint.aspect.Storage
#import tunitas.montara.identifier.Subscription
#import tunitas.montara.storage.Subscription
class tunitas::montara::endpoint::Subscription_Identifier
  : public httpserver::Resource<Subscription_Identifier>
  , protected aspect::Storage<storage::Subscription>
  , protected aspect::Operations<identifier::Subscription, storage::Subscription> {
  struct ancestors {
    using Resource = httpserver::Resource<Subscription_Identifier>;
    using Storage = aspect::Storage<storage::Subscription>;
    using Operations = aspect::Operations<identifier::Subscription, storage::Subscription>;
  };
public:
  inline explicit Subscription_Identifier(storage::Subscription &);
  inline auto render_DELETE(Request const &, [[out]] Response *&fill) -> void;
  inline auto render_GET(Request const &, [[out]] Response *&fill) -> void;
  inline auto render_PUT(Request const &, [[out]] Response *&fill) -> void;
public: // but we wish it wasn't; we wish it wasn't even here [[REMOVEWHEN]] libhttpserver has an appropriate function signature
  inline auto render_DELETE(Request const &r, [[out]] Response **f) -> void { render_DELETE(r, *f); }
  inline auto render_GET(Request const &r, [[out]] Response **f) -> void { render_GET(r, *f); }
  inline auto render_PUT(Request const &r, [[out]] Response **f) -> void { render_PUT(r, *f); }
protected:
  // [[FIXTHIS]] construct the URL in run.cpp so that these to guarantee to match
  // this must match the name used in run.cpp -----------\ (here)
  //                                                     |
  //                                                     |
  //                                                     v
  inline static auto const PARAMETER_NAME = std::string{"subscriptionId"};
};
#endiv
#divert <ipp>
#import tunitas.montara.resources
namespace tunitas::montara::endpoint {
  Subscription_Identifier::Subscription_Identifier(storage::Subscription &store) : ancestors::Storage{store} {
    resources::initialize_getdelete(*this);
  }
  auto Subscription_Identifier::render_DELETE(Request const &request, Response *&fill) -> void {
    dleet(request, fill, store, PARAMETER_NAME);
  }
  auto Subscription_Identifier::render_GET(Request const &request, Response *&fill) -> void {
    getty(request, fill, store, PARAMETER_NAME);
  }
  auto Subscription_Identifier::render_PUT(Request const &request, Response *&fill) -> void {
    putty(request, fill, store, PARAMETER_NAME);
  }
}
#endiv
