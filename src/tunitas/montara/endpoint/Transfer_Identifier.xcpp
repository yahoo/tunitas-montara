// This is -*- c++ -*- (as close to C++2a as possible)
#divert <fpp>
namespace tunitas::montara::endpoint {
  //
  // The code behind the /datatransfer/{datatransferId} endpoint
  //
  // Example: TBD
  //
  // Usage:
  //
  //   endpoint::Transfer_Identifier resource;
  //   ws.register_resource("/datatransfer/{datatransferId}", &resource, true);
  //   ws.start(cfg.foreground);
  //   
  class Transfer_Identifier;
}
#endiv
#divert <hpp>
#import std.string
#import tunitas.montara.endpoint.aspect.Operations
#import tunitas.montara.endpoint.aspect.Storage
#import tunitas.montara.storage.Transfer
class tunitas::montara::endpoint::Transfer_Identifier
  : public httpserver::Resource<Transfer_Identifier>
  , protected aspect::Storage<storage::Transfer>
  , protected aspect::Operations<identifier::Transfer, storage::Transfer> {
  struct ancestors {
    using Resource = httpserver::Resource<Transfer_Identifier>;
    using Storage = aspect::Storage<storage::Transfer>;
    using Operations = aspect::Operations<identifier::Transfer, storage::Transfer>;
  };
public:
  inline explicit Transfer_Identifier(storage::Transfer &);
  inline auto render_GET(Request const &, [[out]] Response *&fill) -> void;
  inline auto render_PUT(Request const &, [[out]] Response *&fill) -> void;
public: // but we wish it wasn't; we wish it wasn't even here [[REMOVEWHEN]] libhttpserver has an appropriate function signature
  inline auto render_GET(Request const &r, [[out]] Response **f) -> void { render_GET(r, *f); }
  inline auto render_PUT(Request const &r, [[out]] Response **f) -> void { render_PUT(r, *f); }
protected:
  // [[FIXTHIS]] construct the URL in run.cpp so that these to guarantee to match
  // this must match the name used in run.cpp -----------\ (here)
  //                                                     |
  //                                                     |
  //                                                     v
  inline static auto const PARAMETER_NAME = std::string{"datatransferId"};
};
#endiv
#divert <ipp>
#import tunitas.montara.resources
namespace tunitas::montara::endpoint {
  Transfer_Identifier::Transfer_Identifier(storage::Transfer &store) : ancestors::Storage{store} {
    resources::initialize_getput(*this);
  }
  auto Transfer_Identifier::render_GET(Request const &request, Response *&fill) -> void {
    getty(request, fill, store, PARAMETER_NAME);
  }
  auto Transfer_Identifier::render_PUT(Request const &request, Response *&fill) -> void {
    putty(request, fill, store, PARAMETER_NAME);
  }
}
#endiv
