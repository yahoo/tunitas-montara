// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-montara/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/montara/tree/LICENSE
#divert <fpp>
namespace tunitas::montara::endpoint {
  //
  // The code behind the /datatransfer/{datatransferId} endpoint
  //
  // Example: TBD
  //
  // Usage:
  //
  //   endpoint::Transfer_Identifier resource;
  //   ws.register_resource("/datatransfer/{datatransferId}", &resource, true);
  //   ws.start(cfg.foreground);
  //   
  class Transfer_Identifier;
}
#endiv
#divert <hpp>
#import std.string
#import tunitas.montara.endpoint.aspect.Operations
#import tunitas.montara.endpoint.aspect.Storage
#import tunitas.montara.storage.Transfer
class tunitas::montara::endpoint::Transfer_Identifier : public microhttpd::Resource,
                                                        protected aspect::Storage<storage::Transfer>,
                                                        protected aspect::Operations<identifier::Transfer, storage::Transfer> {
  struct Ancestors {
    using Resource = microhttpd::Resource;
    using Storage = aspect::Storage<storage::Transfer>;
    using Operations = aspect::Operations<identifier::Transfer, storage::Transfer>;
  };
public:
  inline explicit Transfer_Identifier(storage::Transfer &);
  inline auto GET(Request const &) -> Transport;
  inline auto PUT(Request const &) -> Transport;
protected:
  // [[FIXTHIS]] construct the URL in run.cpp so that these to guarantee to match
  // this must match the name used in run.cpp -----------\ (here)
  //                                                     |
  //                                                     |
  //                                                     v
  inline static auto const PARAMETER_NAME = std::string{"datatransferId"};
};
#endiv
#divert <ipp>
namespace tunitas::montara::endpoint {
  Transfer_Identifier::Transfer_Identifier(storage::Transfer &store) : Ancestors::Storage{store} { resources::initialize_getput(*this); }
  auto Transfer_Identifier::GET(Request const &request) -> Transport { return gettie(request, store, PARAMETER_NAME); }
  auto Transfer_Identifier::PUT(Request const &request) -> Transport { return puttie(request, store, PARAMETER_NAME); }
}
#endiv
