// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-montara/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/montara/tree/LICENSE
#divert <fpp>
namespace tests::unit::storage { class Fixture; }
#endiv
#divert <hpp>
struct tests::unit::storage::Fixture : public cppunit::test::Fixture {
  auto test_something() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import std.string_literals
using namespace std::string_literals;
auto tests::unit::storage::Fixture::test_something() -> void {
  CPPUNIT_ASSERT(true);
}
#import tests.unit.storage.null.Fixture
#import tests.unit.storage.memory.Fixture
auto tests::unit::storage::Fixture::suite() -> cppunit::Test * {
  using namespace rigging::suite;
  Stream series("storage");
  series << call("something", &Fixture::test_something)
         << add<null::Fixture>()
         << add<memory::Fixture>()
    ;
  return finalize(series);
}
#endiv
